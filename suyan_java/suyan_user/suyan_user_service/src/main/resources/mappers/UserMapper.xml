<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suyan.user.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.suyan.user.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="user_status" jdbcType="TINYINT" property="userStatus" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="is_admin" jdbcType="BIT" property="isAdmin" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, open_id, user_name, nick_name, user_pwd, mobile, mail, head_img, user_status, 
    birthday, sex, is_admin, create_time, create_user, create_user_name, update_time, 
    update_user, update_user_name, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.suyan.user.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.suyan.user.model.UserExample">
    delete from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suyan.user.model.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_user (open_id, user_name, nick_name, 
      user_pwd, mobile, mail, 
      head_img, user_status, birthday, 
      sex, is_admin, create_time, 
      create_user, create_user_name, update_time, 
      update_user, update_user_name, is_deleted
      )
    values (#{openId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{userPwd,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{headImg,jdbcType=VARCHAR}, #{userStatus,jdbcType=TINYINT}, #{birthday,jdbcType=TIMESTAMP}, 
      #{sex,jdbcType=BIT}, #{isAdmin,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.suyan.user.model.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        open_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateUserName != null">
        update_user_name,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null">
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suyan.user.model.UserExample" resultType="java.lang.Long">
    select count(*) from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPwd != null">
        user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.headImg != null">
        head_img = #{record.headImg,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.isAdmin != null">
        is_admin = #{record.isAdmin,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserName != null">
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserName != null">
        update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_user
    set id = #{record.id,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      head_img = #{record.headImg,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=BIT},
      is_admin = #{record.isAdmin,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suyan.user.model.User">
    update tb_user
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null">
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suyan.user.model.User">
    update tb_user
    set open_id = #{openId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=BIT},
      is_admin = #{isAdmin,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <update id="logicalDeleteByPrimaryKey">
        UPDATE tb_user
        SET
            is_deleted=1
        WHERE id = #{id,jdbcType=BIGINT} 
    </update>

    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_user
        WHERE id = #{id,jdbcType=BIGINT} 
        AND is_deleted=0
        FOR UPDATE
    </select>
    
    <select id="queryUser" resultMap="BaseResultMap" parameterType="com.suyan.user.req.UserQueryDTO">
        SELECT
         <choose>
          <when test="returnFields!=null">${returnFields}</when>
          <otherwise>
            <include refid="Base_Column_List" />
          </otherwise>
        </choose>
        FROM tb_user
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=BIGINT}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="openId!=null and openId!=''">AND open_id = #{openId,jdbcType=VARCHAR}</if>
            <if test="openIdLike != null and openIdLike != '' ">AND open_id LIKE concat(#{openIdLike,jdbcType=VARCHAR},'%')</if>
            <if test="openIdList != null and openIdList.size > 0">
                <foreach item="item" separator="," open="AND open_id in (" close=")" collection="openIdList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="userName!=null and userName!=''">AND user_name = #{userName,jdbcType=VARCHAR}</if>
            <if test="userNameLike != null and userNameLike != '' ">AND user_name LIKE concat(#{userNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="userNameList != null and userNameList.size > 0">
                <foreach item="item" separator="," open="AND user_name in (" close=")" collection="userNameList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="nickName!=null and nickName!=''">AND nick_name = #{nickName,jdbcType=VARCHAR}</if>
            <if test="nickNameLike != null and nickNameLike != '' ">AND nick_name LIKE concat(#{nickNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="userPwd!=null and userPwd!=''">AND user_pwd = #{userPwd,jdbcType=VARCHAR}</if>
            <if test="mobile!=null and mobile!=''">AND mobile = #{mobile,jdbcType=VARCHAR}</if>
            <if test="mobileLike != null and mobileLike != '' ">AND mobile LIKE concat(#{mobileLike,jdbcType=VARCHAR},'%')</if>
            <if test="mobileList != null and mobileList.size > 0">
                <foreach item="item" separator="," open="AND mobile in (" close=")" collection="mobileList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="userStatus!=null">AND user_status = #{userStatus,jdbcType=TINYINT}</if>
            <if test="userStatusList != null and userStatusList.size > 0">
                <foreach item="item" separator="," open="AND user_status in (" close=")" collection="userStatusList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="birthday!=null">AND birthday = #{birthday,jdbcType=TIMESTAMP}</if>
            <if test="sex!=null">AND sex = #{sex,jdbcType=BOOLEAN}</if>
            <if test="sexList != null and sexList.size > 0">
                <foreach item="item" separator="," open="AND sex in (" close=")" collection="sexList">#{item,jdbcType=BOOLEAN}</foreach>
            </if>
            <if test="isAdmin!=null">AND is_admin = #{isAdmin,jdbcType=BOOLEAN}</if>
            <if test="isAdminList != null and isAdminList.size > 0">
                <foreach item="item" separator="," open="AND is_admin in (" close=")" collection="isAdminList">#{item,jdbcType=BOOLEAN}</foreach>
            </if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="createUser!=null and createUser!=''">AND create_user = #{createUser,jdbcType=VARCHAR}</if>
            <if test="createUserLike != null and createUserLike != '' ">AND create_user LIKE concat(#{createUserLike,jdbcType=VARCHAR},'%')</if>
            <if test="createUserList != null and createUserList.size > 0">
                <foreach item="item" separator="," open="AND create_user in (" close=")" collection="createUserList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="createUserName!=null and createUserName!=''">AND create_user_name = #{createUserName,jdbcType=VARCHAR}</if>
            <if test="createUserNameLike != null and createUserNameLike != '' ">AND create_user_name LIKE concat(#{createUserNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="updateUser!=null and updateUser!=''">AND update_user = #{updateUser,jdbcType=VARCHAR}</if>
            <if test="updateUserLike != null and updateUserLike != '' ">AND update_user LIKE concat(#{updateUserLike,jdbcType=VARCHAR},'%')</if>
            <if test="updateUserList != null and updateUserList.size > 0">
                <foreach item="item" separator="," open="AND update_user in (" close=")" collection="updateUserList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="updateUserName!=null and updateUserName!=''">AND update_user_name = #{updateUserName,jdbcType=VARCHAR}</if>
            <if test="updateUserNameLike != null and updateUserNameLike != '' ">AND update_user_name LIKE concat(#{updateUserNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="updateUserNameList != null and updateUserNameList.size > 0">
                <foreach item="item" separator="," open="AND update_user_name in (" close=")" collection="updateUserNameList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="isDeleted!=null">AND is_deleted = #{isDeleted,jdbcType=BOOLEAN}</if>
            <if test="isDeletedList != null and isDeletedList.size > 0">
                <foreach item="item" separator="," open="AND is_deleted in (" close=")" collection="isDeletedList">#{item,jdbcType=BOOLEAN}</foreach>
            </if>
        </where>
        <choose>
            <when test="order!=null and orderBy!=null and order!='' and orderBy!=''">order by ${orderBy} ${order}</when>
            <otherwise>order by id desc</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into tb_user (
            open_id,
            user_name,
            nick_name,
            user_pwd,
            mobile,
            mail,
            head_img,
            user_status,
            birthday,
            sex,
            is_admin,
            create_time,
            create_user,
            create_user_name,
            update_time,
            update_user,
            update_user_name,
            is_deleted        )
        values
        <foreach collection="modelList" item="bean" index="index" separator=",">
        (
            #{bean.openId,jdbcType=VARCHAR} ,
            #{bean.userName,jdbcType=VARCHAR} ,
            #{bean.nickName,jdbcType=VARCHAR} ,
            #{bean.userPwd,jdbcType=VARCHAR} ,
            #{bean.mobile,jdbcType=VARCHAR} ,
            #{bean.mail,jdbcType=VARCHAR} ,
            #{bean.headImg,jdbcType=VARCHAR} ,
            #{bean.userStatus,jdbcType=TINYINT} ,
            #{bean.birthday,jdbcType=TIMESTAMP} ,
            #{bean.sex,jdbcType=BOOLEAN} ,
            #{bean.isAdmin,jdbcType=BOOLEAN} ,
            #{bean.createTime,jdbcType=TIMESTAMP} ,
            #{bean.createUser,jdbcType=VARCHAR} ,
            #{bean.createUserName,jdbcType=VARCHAR} ,
            #{bean.updateTime,jdbcType=TIMESTAMP} ,
            #{bean.updateUser,jdbcType=VARCHAR} ,
            #{bean.updateUserName,jdbcType=VARCHAR} ,
            #{bean.isDeleted,jdbcType=BOOLEAN}         )
        </foreach>
    </insert>

        <select id="selectByOpenId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_user
        WHERE  open_id = #{openId,jdbcType=VARCHAR}
            AND is_deleted = 0
            </select>
        <select id="selectByUserName" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_user
        WHERE  user_name = #{userName,jdbcType=VARCHAR}
            AND is_deleted = 0
            </select>
    
</mapper>